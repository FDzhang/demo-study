logging.pattern.level = %X{userId}%5p

#logging.config=classpath:logback-spring-no-use.xml

#日志配置
#根日志级别配置 整个项目的输出日志的级别  默认是 info
logging.level.root=info

#定义某个包的日志输出级别
logging.level.com.example.demomdc.controller=warn

#定义日志信息输出到文件
#logging.path=
#不指定路径在当前项目下生成springboot.log日志

#可以指定完整的路径;  (可以是绝对路径，可以是相对路径)
#logging.file=G:/springboot.log
#在当前项目下创建spring文件夹和里面的log文件夹;使用spring.log作为默认文件
#logging.file.path=spring.log

#通过 logging.file.path 生成的日志文件名字为 spring.log，如果需要自定义文件名字，则通过 logging.file.name 属性进行配置（此时不需要再配置 logging.file.path）：
logging.file.name=./logs/spring.log
#无论何种设置，Spring Boot 都会自动按天分割日志文件，也就是说每天都会自动生成一个新的 log 文件，而之前的会自动打成 GZ 压缩包。
#除此之外，我们还可以设置日志文件的保留时间（天），以及单个文件的大小：
# 日志文件大小
logging.file.max-size=10MB
# 保留的日志时间
logging.file.max-history=10

#指定文件中日志输出的格式
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger : %msg%n

# 在控制台输出的日志的格式 （带有色彩）
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %clr(%5p) [%thread] %clr(%logger{50}){cyan} : %msg%n