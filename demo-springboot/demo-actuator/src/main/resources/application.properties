
#参考链接：https://shuyi.tech/archives/06-prometheus-with-springboot-actuator

#不同于 Actuator 1.x，Actuator 2.x 的大多数端点默认被禁掉。所以在查看对应端点之前，我们需要做好配置，否则我们是无法访问对应端点的。
#
#我们可以通过以下配置，来配置通过 JMX 和 HTTP 暴露的端点。
#
#属性	                                    默认值
#management.endpoints.jmx.exposure.exclude
#management.endpoints.jmx.exposure.include	*
#management.endpoints.web.exposure.exclude
#management.endpoints.web.exposure.include	info, health

#接着我们访问地址：localhost:8080/actuator/metrics，可以看到所有的指标地址。


#打开所有的监控点
management.endpoints.web.exposure.include=*
#可以选择打开部分端点，例如下面的配置打开 beans 和 trace 两个端点。
#management.endpoints.web.exposure.exclude=beans,trace


#Actuator 默认所有的监控点路径都在 /actuator/*，当然如果有需要这个路径也支持定制。例如下面的配置将前缀改成了 monitor，那么访问路径就变成了 /monitor/*。
#management.endpoints.web.base-path=/monitor


#health端点
#/health 端点会聚合你程序的健康指标，来检查程序的健康情况。端点公开的应用健康信息取决于参数 management.endpoint.health.show-details，该属性值可选项为：
#属性值	描述
#never	            不展示详细信息，up 或者 down 的状态，默认配置
#when-authorized	详细信息将会展示给通过认证的用户。授权的角色可以通过management.endpoint.health.roles 配置
#always	            对所有用户暴露详细信息

#在这里我们看到除了 status 状态之外，并没有其他信息。
#这是因为我们应用中并没有其他依赖。当你的项目有依赖对应组件的时候，这些健康指示器就会被自动装配，继而采集对应的信息。
#现在我们在 pom.xml 文件中增加 redis 依赖：

#接着在 application.yml 中增加如下参数，允许对所有用户暴露详细信息：
management.endpoint.health.show-details=always

#我们也可以通过配置禁用某个组件的健康监测。例如下面的配置禁用了 mongodb 的组件健康监测。
#management.health.mongo.enabled: false
#或者我们可以禁用所有自动配置的健康指示器：
#management.health.defaults.enabled: false



#info端点
#/info 端点可以用来查看配置文件 application.properties 中 info 节点下的配置信息，默认情况下 application.properties 中并没有 info 节点配置，
# 所以当我们访问 localhost:8080/actuator/info 时会访问空 JSON 串。
#
#接下来我们在 application.properties 中增加了如下配置：
#
info.app.name=demo-actuator
info.app.encoding=UTF-8
info.app.java.source=11
info.app.java.target=11

#shutdown端点
#这个端点属于操作控制类端点，可以优雅关闭 Spring Boot 应用。要使用这个功能首先需要在配置文件中开启：
management.endpoint.shutdown.enabled=true
#由于 shutdown 接口默认只支持 POST 请求，我们启动 Demo 项目，向 http://localhost:8080/actuator/shutdown 发起 POST 请求。
#远程操作相对来说比较危险，所以一般在线上都不会开启这个端点。
