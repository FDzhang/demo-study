spring:
  application:
    name: demo-provider
  cloud:
    # Nacos 作为注册中心的配置项
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848 # Nacos 服务器地址

# Dubbo 配置项，对应 DubboConfigurationProperties 类
# 推荐：如果胖友想把 Dubbo 服务提供者的所有 Service 服务的参数校验都开启，
#  可以修改 application.yaml 配置文件，增加 dubbo.provider.validation = true 配置。
dubbo:
#  provider:
#    validation: true
  scan:
    base-packages: cn.seasun.dubboproviderdemo.service # 指定 Dubbo 服务实现类的扫描基准包
  # Dubbo 服务暴露的协议配置，对应 ProtocolConfig Map
  protocols:
    dubbo:
      name: dubbo # 协议名称
      port: -1 # 协议端口，-1 表示自增端口，从 20880 开始
  # Dubbo 服务注册中心配置，对应 RegistryConfig 类
  registry:
    address: spring-cloud://127.0.0.1:8848 # 指定 Dubbo 服务注册中心的地址
  # Spring Cloud Alibaba Dubbo 专属配置项，对应 DubboCloudProperties 类
  cloud:
    subscribed-services: '' # 设置订阅的应用列表，默认为 * 订阅所有应用。设置为 '' 表示空，不订阅任何的应用。

#① spring.cloud.nacos.discovery 配置项，使用 Nacos 作为 Spring Cloud 注册中心的配置项。默认情况下，
#  使用 spring.application.name 作为注册的服务名。
#
#② dubbo 配置项，Dubbo 配置项，对应 DubboConfigurationProperties 类，由 Dubbo Spring Boot 项目定义。
#dubbo.scan.base-packages 配置项，指定 Dubbo 服务实现类的扫描基准包。
#  稍后我们会实现 Service 服务在 cn.seasun.dubboproviderdemo.service  包下。
#
#dubbo.protocols 配置项，Dubbo 服务暴露的协议配置，对应 ProtocolConfig Map。
#  其中 key 为稍后定义的 Protocol Bean 的名字，一般设置为和使用的协议名称相同即可。
#
#name：协议名称。这里使用 dubbo:// 协议。
#port：协议端口。这里设置为 -1，表示自增端口，从 20880 开始。
#dubbo.registry 配置项，Dubbo 服务注册中心配置，对应 RegistryConfig 类。
#
#address：指定 Dubbo 服务注册中心的地址。这里设置为 spring-cloud://127.0.0.1:8848，
#  使用 spring.cloud.nacos.discovery 配置项的 Nacos 注册中心。
#③ dubbo.cloud 配置项，Spring Cloud Alibaba Dubbo 专属配置项，对应 DubboCloudProperties 类。
#
#subscribed-services 配置项，设置订阅的应用列表，默认为 * 订阅所有应用。这里，设置为 '' 表示空，不订阅任何的应用。